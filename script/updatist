#!  /usr/bin/env ruby

require 'open-uri'
require 'socket'
require 'thread'

def main args
  if args.length != 2 then
    $stderr.puts %[Arguments: port URL.jad]
    return 1
  end
  TCPServer.open(args.first.to_i) do |sock|
    $stderr.puts %[0.0.0.0:#{args.first} ...]
    handle_conns args.last, sock
  end
  0
end

def handle_conns url, sock
  while true
    newc  = sock.accept
    $stderr.write(%[%s %s ...] % [Time.now.strftime('[%x %X]'), newc.addr.inspect])
    $stderr.flush
    Thread.new(newc) do |conn|
      begin
        open url do |fch|
          got = fch.read.match /href="([^"]*)"/
          $stderr.write(%[%s %s %s] % [Time.now.strftime('[%x %X]'), got[1]])
          $stderr.flush
          ct  = %[UPDATE\0#{got[1]}]
          cl  = ct.length
          conn.write(%[HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: #{cl}\r\nContent-Type: text/plain\r\n\r\n#{ct}])
          conn.close
          $stderr.puts
        end
      rescue Exception => e
          $stderr.puts e.inspect
          $stderr.puts e.backtrace
      end
    end
  end
end

exit(main(ARGV))
